/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "org.jetbrains.intellij" version "1.17.4"
}

apply plugin: 'java'
apply plugin: 'org.jetbrains.intellij'

intellij {
    version = ideaVersion
    downloadSources = true
    type = project.hasProperty('intellij_type') ? project.intellij_type : 'IC'
    plugins = ['java', 'java-i18n', 'properties', 'yaml', 'maven', 'gradle']
}

// to support IDEA 2023 onwards
// http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html
patchPluginXml {
    sinceBuild = "231"
    untilBuild = "241.*"
}

runPluginVerifier {
    ideVersions = [ "2023.1", "2023.2", "2023.3", "2024.1.4" ]
}

// publishPlugin {
//    def authenticationToken = "$System.env.INTELLIJ_TOKEN"
//    token authenticationToken
// }

tasks {
    buildSearchableOptions {
        enabled = false
    }
}
println "Building with intellij type : ${intellij.type}"

dependencies {
    implementation "org.apache.camel:camel-catalog:${camelVersion}"
    implementation "org.apache.camel:camel-tooling-maven:${camelVersion}"
    implementation "org.apache.camel:camel-util:${camelVersion}"
    implementation "org.apache.camel:camel-util-json:${camelVersion}"
    implementation "org.apache.camel:camel-tooling-model:${camelVersion}"
    implementation "org.apache.camel:camel-management-api:${camelVersion}"
    implementation "org.apache.camel.springboot:camel-catalog-provider-springboot:${camelVersion}"
    implementation "org.apache.camel.karaf:camel-catalog-provider-karaf:${camelKarafVersion}"
    implementation "org.apache.camel.quarkus:camel-quarkus-catalog:${camelQuarkusVersion}"
    implementation "org.apache.camel.kamelets:camel-kamelets:${camelKameletVersion}"
    // Needed to avoid conflicts with the version of the maven resolver used by IntelliJ
    implementation "org.apache.maven.resolver:maven-resolver-api:${mavenResolverVersion}"
    implementation "org.apache.maven.resolver:maven-resolver-impl:${mavenResolverVersion}"
    implementation "io.github.classgraph:classgraph:4.8.174"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1"
    implementation "io.fabric8:kubernetes-model-apiextensions:6.13.1"

    testImplementation "org.apache.camel:camel-core:${camelVersion}"
    testImplementation "org.apache.camel.springboot:camel-spring-boot:${camelVersion}"
    testImplementation "org.apache.camel.springboot:camel-file-starter:${camelVersion}"
    testImplementation 'org.jboss.shrinkwrap:shrinkwrap-depchain:1.2.6'
    testImplementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.3.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "org.apache.camel:camel-jsonpath:${camelVersion}"
}

description = 'Apache Camel IDE :: IDEA Plugin'

runIde {
 // Allow to have access to the PSI Structure...
    systemProperty("idea.is.internal", "true")
}
